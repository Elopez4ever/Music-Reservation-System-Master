<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bookingsystem.mapper.RoomMapper">
    <insert id="save">
        insert into rooms(room_number, name, building_id,department_id, floor, capacity, room_type_id, facilities, description, created_at,
                          updated_at)
        values (#{roomNumber}, #{name}, #{buildingId},#{departmentId} ,#{floor}, #{capacity}, #{roomTypeId}, #{facilities}, #{description},
                #{createdAt}, #{updatedAt})
    </insert>
    <insert id="upsertMaintenanceRecord" parameterType="com.bookingsystem.pojo.RoomMaintenance">
        INSERT INTO room_maintenance (id, room_id, start_time, end_time, reason, maintenance_type)
        VALUES (#{id}, #{roomId}, #{startTime}, #{endTime}, #{reason}, #{maintenanceType})
            ON DUPLICATE KEY UPDATE
                                 room_id = #{roomId},
                                 start_time = #{startTime},
                                 end_time = #{endTime},
                                 reason = #{reason},
                                 maintenance_type = #{maintenanceType},
                                 created_at = NOW();
    </insert>


    <select id="list" resultType="com.bookingsystem.vo.RoomQueryVO">
        select r.id,r.room_number,r.name,rt.id as room_type_id,
               r.facilities,r.capacity,r.status ,r.department_id,d.name as departmentName
        from rooms r join room_types rt on r.room_type_id = rt.id left join departments d on r.department_id = d.id
        <where>
            <if test="buildingId != null ">
                and building_id = #{building}
            </if>
            <if test="status != null">
                and status = #{status}
            </if>
            <!-- 按教室号或名称模糊查询 -->
            <if test="roomNumberOrName != null and roomNumberOrName != ''">
                AND (
                room_number LIKE CONCAT('%', #{roomNumberOrName}, '%')
                OR name LIKE CONCAT('%', #{roomNumberOrName}, '%')
                )
            </if>
            <if test="roomTypeId != null and roomTypeId != ''">
                and rt.id = #{roomTypeId}
            </if>
        </where>
    </select>
    <select id="searchRooms" resultType="com.bookingsystem.vo.RoomQueryVO">
        SELECT
        r.id,
        r.room_number,
        r.name,
        b.name AS buildingName,
        r.floor,
        rt.type_name AS type,
        r.capacity,
        r.facilities,
        r.status,
        r.department_id,
        d.name AS departmentName
        FROM rooms r
        JOIN buildings b ON r.building_id = b.id
        JOIN room_types rt ON r.room_type_id = rt.id
        JOIN departments d ON r.department_id = d.id
        <where>
            <!-- 建筑筛选 -->
            <if test="buildingId != null">
                AND r.building_id = #{buildingId}
            </if>

            <!-- 教室类型筛选 -->
            <if test="roomTypeId != null">
                AND r.room_type_id = #{roomTypeId}
            </if>

            <if test="departmentId != null">
                AND r.department_id = #{departmentId}
            </if>
            <!-- 容量范围筛选 -->
            <if test="minCapacity != null">
                AND r.capacity >= #{minCapacity}
            </if>
            <if test="maxCapacity != null">
                AND r.capacity &lt;= #{maxCapacity}
            </if>

            <!-- 时间冲突检查 -->
            <if test="startTime != null and endTime != null">
                AND NOT EXISTS (
                SELECT 1 FROM reservations res
                WHERE res.room_id = r.id
                AND res.status IN ('pending', 'approved')
                AND res.start_time &lt; #{endTime}
                AND res.end_time &gt; #{startTime}
                )
            </if>
        </where>
        ORDER BY r.capacity DESC
    </select>
    <select id="getRoomTypeUsageStats" resultType="com.bookingsystem.dto.RoomTypeUsageDTO">
        SELECT
            rt.type_name,
            COUNT(DISTINCT r.id) AS total_rooms,

            -- 占用数量
            SUM(
                    CASE
                        WHEN EXISTS (
                                SELECT 1
                                FROM reservations res
                                WHERE res.room_id = r.id
                                  AND res.status = 'approved'
                                  AND res.start_time &lt;= #{endTime}
                                  AND res.end_time &gt;= #{startTime}
                            ) THEN 1
                        ELSE 0
                        END
                ) AS occupied_count,

            -- 空闲数量
            SUM(
                    CASE
                        WHEN NOT EXISTS (
                                SELECT 1
                                FROM reservations res
                                WHERE res.room_id = r.id
                                  AND res.status = 'approved'
                                  AND res.start_time &lt;= #{endTime}
                                  AND res.end_time &gt;= #{startTime}
                            ) THEN 1
                        ELSE 0
                        END
                ) AS free_count

        FROM rooms r
                 LEFT JOIN room_types rt ON r.room_type_id = rt.id
        WHERE r.status = 1
        GROUP BY rt.id, rt.type_name
    </select>
    <select id="getTodayHotRooms" resultType="com.bookingsystem.vo.HotRoomVO">
        SELECT
            r.id as roomId,
            r.name AS roomName,
            b.name AS buildingName,
            COUNT(*) AS reservationCount
        FROM reservations res
                 JOIN rooms r ON res.room_id = r.id
                 JOIN buildings b ON r.building_id = b.id
        WHERE DATE(res.start_time) = CURDATE()
          AND res.status IN ('pending', 'approved', 'completed')
        GROUP BY r.id
        ORDER BY reservationCount DESC
            LIMIT #{limit}
    </select>
    <select id="getById" resultType="com.bookingsystem.pojo.Room">
        select r.*,d.name as departmentName
        from rooms r join room_types rt on r.room_type_id = rt.id left join departments d on r.department_id = d.id
        where r.id = #{id}
    </select>

</mapper>